legend("topright",inset=.05,c('Siege Damage','Hero Damage','Healing/Shielding','XP Contribution'), fill=c(rgb(1,0,0,1/2),rgb(0,1,0,1/2),rgb(0,0,1,1/2),rgb(1,1,0,1/2)))
lowerBoundX <- min(min(DF$SiegePM),min(DF$HeroPM),min(DF$HealingPM),min(DF$XPPM))
upperBoundX <- max(max(DF$SiegePM),max(DF$HeroPM),max(DF$HealingPM),max(DF$XPPM))
upperBoundY <- length(DF$SiegePM)*.4
SiegePM_DF <- hist(DF$SiegePM,breaks=breaksN,plot=F)
HeroPM_DF <- hist(DF$HeroPM,breaks=breaksN,plot=F)
HealingPM_DF <- hist(DF$HealingPM,breaks=breaksN,plot=F)
XPPM_DF <- hist(DF$XPPM,breaks=breaksN,plot=F)
plot(SiegePM_DF, col=rgb(1,0,0,1/4), xlim=c(lowerBoundX,upperBoundX),ylim=c(0,upperBoundY),main='Lucio Stats Per Min',xlab='value',las=1)
plot(HeroPM_DF, col=rgb(0,1,0,1/4), add=T)
plot(HealingPM_DF, col=rgb(0,0,1,1/4), add=T)
plot(XPPM_DF, col=rgb(1,1,0,1/4), add=T)
abline(v=mean(DF$SiegePM),col='red',lw=3)
abline(v=mean(DF$HeroPM),col='green',lw=3)
abline(v=mean(DF$HealingPM),col='blue',lw=3)
abline(v=mean(DF$XPPM),col='yellow',lw=3)
legend("topright",inset=.05,c('Siege Per Minute','Hero Per Minute','Healing Per Minute','XP Per Minute'), fill=c(rgb(1,0,0,1/2),rgb(0,1,0,1/2),rgb(0,0,1,1/2),rgb(1,1,0,1/2)))
title = sprintf('Lucio Deaths by the Hour n=%d',sum(Deaths_By_Time_DF))
source('~/GitHub/SupportPie/support analysis lucio.R', echo=TRUE)
View(DF)
View(DFA)
sprintf('i like %s','mitzi')
file <- sprintf("~/GitHub/SupportPie/SupportPie - %s.csv",'Lucio')
file
file <- sprintf("~/GitHub/SupportPie/SupportPie - %s.csv",'Lucio')
DFA <- read_csv(file)
View(DFA)
name <- 'Lucio'
#Lucio !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
file <- sprintf("~/GitHub/SupportPie/SupportPie - %s.csv",name)
DFA <- read_csv(file)
DF <- DFA[2:nrow(DFA),] #removing the avg I have on the 1st row
file
title <- sprintf('%s Times',name)
title
title <- sprintf('%s Sound Barriers',name)
title
source('~/GitHub/SupportPie/support analysis lucio.R', echo=TRUE)
library(readr)
name <- 'Lucio'
#Lucio !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
file <- sprintf("~/GitHub/SupportPie/SupportPie - %s.csv",name)
DFA <- read_csv(file)
DF <- DFA[2:nrow(DFA),] #removing the avg I have on the 1st row
#Deaths by time played
Deaths_By_Time_DF <- rep(0,24)
Time_DF <- DF$Time[!is.na(DF$Time)]
death_start <- 36
for(i in death_start:nrow(DF)){
t <- DF[i,]$Time
d <- as.numeric(DF[i,30:37]) ######################################## dangerous hard coded numbers
Deaths_By_Time_DF[t+1] = Deaths_By_Time_DF[t+1] + length(d[!is.na(d)])
}
title = sprintf('%s Deaths by the Hour n=%d',name,sum(Deaths_By_Time_DF))
plot(0:23,Deaths_By_Time_DF,main=title,xlab='Real Time Hour',ylab='Deaths',pch=16,type='o',las=1)
death_start:nrow(DF)
View(DF)
Time_DF
DF$Time
logical(DF$Time)
as.logical(DF$Time)
DF$Time
z = DF$Time
NonNAindex <- which(!is.na(z))
firstNonNA <- min(NonNAindex)
NonNAindex
death_start <- min(which(!is.na(DF$Time)))
death_start
death_start <- min(which(!is.na(DF$Time)))
death_start
i=36
as.numeric(DF[i,30:37])
as.numeric(DF[i,c('D1','D2')])
death_columns <- c('D1','D2','D3','D4','D5','D6','D7','D8')
death_columns
as.numeric(DF[i,death_columns])
if(3=2){print('hi)}
if(2==2){print('hi)}
if(2==2){
print('hi)}
if(2==2){
print('hi)
}
if(T){
print(3)
}
if(2==){
if(2==2){
print(3)
}
name
if(name=="Lucio"){
print(name)
}
if(name=="Lucio"){
#Ult
upperBoundY <- length(DF$SoundBarrier)*.4
Ult_DF_1 <- hist(DF$SoundBarrier,plot=F)
UltSuccess_DF_1 <- hist(DF$SoundBarrierSuccess,plot=F)
title <- sprintf('%s Sound Barriers',name)
plot(Ult_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,max(DF$SoundBarrier)),ylim=c(0,upperBoundY),main=title,xlab='ults',las=1) # #ults > #ult success
plot(UltSuccess_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF$SoundBarrier),col='blue',lw=3)
abline(v=mean(DF$SoundBarrierSuccess),col='red',lw=3)
legend("topright",inset=.05,c('Ults Casted','Ult Successful'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
UltPercent_DF_1 <- hist(DF$SoundBarrierPercent,breaks=breaksN,plot=F)
UltPM_DF <- hist(DF$UltPM,breaks=breaksN,plot=F)
title <- sprintf('%s Ult Percent & Ult Per Minute',name)
plot(UltPercent_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,1),main=title,xlab='percent/ults per min',las=1)
plot(UltPM_DF, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF$SoundBarrierPercent),col='blue',lw=3)
abline(v=mean(DF$UltPM),col='red',lw=3)
legend("topleft",inset=.05,c('Ult Success Percent','Ults Per Minute'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
}
breaksN <- 15
source('~/GitHub/SupportPie/support analysis lucio.R', echo=TRUE)
DF$SoundBarrier
DF["SoundBarrier']
DF['SoundBarrier']
as.numeric(DF['SoundBarrier'])
as.numeric(DF[,'SoundBarrier'])
indicator_boolean <- c(T,F,F,F,F)
indicator_boolean_string <- c('SoundBarrier','a','a','a','a')
indicator_boolean_string
indicator_boolean_string[1]
DF$indicator_boolean_string[1]
DF[indicator_boolean_string[1]]
as.vector(DF[indicator_boolean_string[1]])
ans = as.vector(DF[indicator_boolean_string[1]])
ans[1]
ans = DF[[indicator_boolean_string[1]]]
ans
Deaths_Pie_DF <- c(DF$D1,DF$D2,DF$D3,DF$D4,DF$D5,DF$D6,DF$D7,DF$D8)
Deaths_Pie_DF
Deaths_Pie_DF[[!is.na(Deaths_Pie_DF)]]
Deaths_Pie_DF[!is.na(Deaths_Pie_DF)]
DF$SoundBarrier
D[['SoundBarrier']]
D[["SoundBarrier"]]
DF[[indicator_boolean_string[1]]]
a =DF$SoundBarrier
b=DF[[indicator_boolean_string[1]]]
a==b
indicator_boolean_string
indicator_boolean_string[1]
DF[['SoundBarrier']]
length(DF[[indicator_boolean_string[1]]])
indicator_boolean <- c(T,T,F,F,F,F,F)
indicator_boolean_string <- c('SoundBarrier','SoundBarrierSuccess','a','a','a','a','a')
upperBoundY <- length(DF[[indicator_boolean_string[1]]])*.4
Ult_DF_1 <- hist(DF[[indicator_boolean_string[1]]],plot=F)
UltSuccess_DF_1 <- hist(DF[[indicator_boolean_string[2]]],plot=F)
title <- sprintf('%s %s',name,indicator_boolean_string[1])
plot(Ult_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,max(DF[[indicator_boolean_string[1]]])),ylim=c(0,upperBoundY),main=title,xlab='ults',las=1) # #ults > #ult success
plot(UltSuccess_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[indicator_boolean_string[1]]]),col='blue',lw=3)
abline(v=mean(DF[[indicator_boolean_string[2]]]),col='red',lw=3)
legend("topright",inset=.05,c('Ults Casted','Ult Successful'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
indicator_boolean[1]
indicator_boolean[2]
indicator_boolean[3]
if(column_names_indicator[1]){
#Ult 1
upperBoundY <- length(DF[[column_names[1]]])*.4
Ult_DF_1 <- hist(DF[[column_names[1]]],plot=F)
UltSuccess_DF_1 <- hist(DF[[column_names[2]]],plot=F)
title <- sprintf('%s %s',name,column_names[1])
plot(Ult_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,max(DF[[column_names[1]]])),ylim=c(0,upperBoundY),main=title,xlab='ults',las=1) # #ults > #ult success
plot(UltSuccess_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[column_names[1]]]),col='blue',lw=3)
abline(v=mean(DF[[column_names[2]]]),col='red',lw=3)
legend("topright",inset=.05,c('Ults Casted','Ult Successful'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
}else if(column_names_indicator[4]){
#Ult 2
upperBoundY <- length(DF[[indicator_boolean_string[1]]])*.4
Ult_DF_1 <- hist(DF[[indicator_boolean_string[1]]],plot=F)
UltSuccess_DF_1 <- hist(DF[[indicator_boolean_string[2]]],plot=F)
title <- sprintf('%s %s',name,indicator_boolean_string[1])
plot(Ult_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,max(DF[[indicator_boolean_string[1]]])),ylim=c(0,upperBoundY),main=title,xlab='ults',las=1) # #ults > #ult success
plot(UltSuccess_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[indicator_boolean_string[1]]]),col='blue',lw=3)
abline(v=mean(DF[[indicator_boolean_string[2]]]),col='red',lw=3)
legend("topright",inset=.05,c('Ults Casted','Ult Successful'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
UltPercent_DF_1 <- hist(DF$SoundBarrierPercent,breaks=breaksN,plot=F)
UltPM_DF <- hist(DF$UltPM,breaks=breaksN,plot=F)
title <- sprintf('%s Ult Percent & Ult Per Minute',name)
plot(UltPercent_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,1),main=title,xlab='percent/ults per min',las=1)
plot(UltPM_DF, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF$SoundBarrierPercent),col='blue',lw=3)
abline(v=mean(DF$UltPM),col='red',lw=3)
legend("topleft",inset=.05,c('Ult Success Percent','Ults Per Minute'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
}
column_names_indicator <- c(T,T,F,F,F,F,F) #specific to luicio
column_names <- c('SoundBarrier','SoundBarrierSuccess','SoundBarrierPercent','a','a','a','a')
if(column_names_indicator[1]){
#Ult 1
upperBoundY <- length(DF[[column_names[1]]])*.4
Ult_DF_1 <- hist(DF[[column_names[1]]],plot=F)
UltSuccess_DF_1 <- hist(DF[[column_names[2]]],plot=F)
title <- sprintf('%s %s',name,column_names[1])
plot(Ult_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,max(DF[[column_names[1]]])),ylim=c(0,upperBoundY),main=title,xlab='ults',las=1) # #ults > #ult success
plot(UltSuccess_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[column_names[1]]]),col='blue',lw=3)
abline(v=mean(DF[[column_names[2]]]),col='red',lw=3)
legend("topright",inset=.05,c('Ults Casted','Ult Successful'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
}else if(column_names_indicator[4]){
#Ult 2
upperBoundY <- length(DF[[indicator_boolean_string[1]]])*.4
Ult_DF_1 <- hist(DF[[indicator_boolean_string[1]]],plot=F)
UltSuccess_DF_1 <- hist(DF[[indicator_boolean_string[2]]],plot=F)
title <- sprintf('%s %s',name,indicator_boolean_string[1])
plot(Ult_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,max(DF[[indicator_boolean_string[1]]])),ylim=c(0,upperBoundY),main=title,xlab='ults',las=1) # #ults > #ult success
plot(UltSuccess_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[indicator_boolean_string[1]]]),col='blue',lw=3)
abline(v=mean(DF[[indicator_boolean_string[2]]]),col='red',lw=3)
legend("topright",inset=.05,c('Ults Casted','Ult Successful'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
UltPercent_DF_1 <- hist(DF$SoundBarrierPercent,breaks=breaksN,plot=F)
UltPM_DF <- hist(DF$UltPM,breaks=breaksN,plot=F)
title <- sprintf('%s Ult Percent & Ult Per Minute',name)
plot(UltPercent_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,1),main=title,xlab='percent/ults per min',las=1)
plot(UltPM_DF, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF$SoundBarrierPercent),col='blue',lw=3)
abline(v=mean(DF$UltPM),col='red',lw=3)
legend("topleft",inset=.05,c('Ult Success Percent','Ults Per Minute'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
}
if(column_names_indicator[1]){
#Ult 1
upperBoundY <- length(DF[[column_names[1]]])*.4
Ult_DF_1 <- hist(DF[[column_names[1]]],plot=F)
UltSuccess_DF_1 <- hist(DF[[column_names[2]]],plot=F)
title <- sprintf('%s %s',name,column_names[1])
plot(Ult_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,max(DF[[column_names[1]]])),ylim=c(0,upperBoundY),main=title,xlab='ults',las=1) # #ults > #ult success
plot(UltSuccess_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[column_names[1]]]),col='blue',lw=3)
abline(v=mean(DF[[column_names[2]]]),col='red',lw=3)
legend("topright",inset=.05,c('Ults Casted','Ult Successful'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
UltPercent_DF_1 <- hist(DF[[column_names[3]]],breaks=breaksN,plot=F)
UltPM_DF <- hist(DF[[column_names[4]]],breaks=breaksN,plot=F)
title <- sprintf('%s Ult Percent & Ult Per Minute',name)
plot(UltPercent_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,1),main=title,xlab='percent/ults per min',las=1)
plot(UltPM_DF, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[column_names[3]]]),col='blue',lw=3)
abline(v=mean(DF[[column_names[4]]]),col='red',lw=3)
legend("topleft",inset=.05,c('Ult Success Percent','Ults Per Minute'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
}
DF[[column_names[4]]]
source('~/GitHub/SupportPie/support analysis lucio.R', echo=TRUE)
column_names_indicator <- c(T,F,F,F,F,F,F,F) #specific to luicio
column_names <- c('SoundBarrier','SoundBarrierSuccess','SoundBarrierPercent','Ult1PM','a','a','a')
if(column_names_indicator[1]){
#Ult 1
upperBoundY <- length(DF[[column_names[1]]])*.4
Ult_DF_1 <- hist(DF[[column_names[1]]],plot=F)
UltSuccess_DF_1 <- hist(DF[[column_names[2]]],plot=F)
title <- sprintf('%s %s',name,column_names[1])
plot(Ult_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,max(DF[[column_names[1]]])),ylim=c(0,upperBoundY),main=title,xlab='ults',las=1) # #ults > #ult success
plot(UltSuccess_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[column_names[1]]]),col='blue',lw=3)
abline(v=mean(DF[[column_names[2]]]),col='red',lw=3)
legend("topright",inset=.05,c('Ults Casted','Ult Successful'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
UltPercent_DF_1 <- hist(DF[[column_names[3]]],breaks=breaksN,plot=F)
UltPM_DF <- hist(DF[[column_names[4]]],breaks=breaksN,plot=F)
title <- sprintf('%s Ult Percent & Ult Per Minute',name)
plot(UltPercent_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,1),main=title,xlab='percent/ults per min',las=1)
plot(UltPM_DF, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[column_names[3]]]),col='blue',lw=3)
abline(v=mean(DF[[column_names[4]]]),col='red',lw=3)
legend("topleft",inset=.05,c('Ult Success Percent','Ults Per Minute'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
}
ult_names_indicator <- c(T,F,F,F,F,F,F,F) #specific to luicio
ult_names <- c('SoundBarrier','SoundBarrierSuccess','SoundBarrierPercent','Ult1PM','a','a','a')
if(ult_names_indicator[1]){
#Ult 1
upperBoundY <- length(DF[[ult_names[1]]])*.4
Ult_DF_1 <- hist(DF[[ult_names[1]]],plot=F)
UltSuccess_DF_1 <- hist(DF[[ult_names[2]]],plot=F)
title <- sprintf('%s %s',name,ult_names[1])
plot(Ult_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,max(DF[[column_names[1]]])),ylim=c(0,upperBoundY),main=title,xlab='ults',las=1) # #ults > #ult success
plot(UltSuccess_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[ult_names[1]]]),col='blue',lw=3)
abline(v=mean(DF[[ult_names[2]]]),col='red',lw=3)
legend("topright",inset=.05,c('Ults Casted','Ult Successful'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
UltPercent_DF_1 <- hist(DF[[ult_names[3]]],breaks=breaksN,plot=F)
UltPM_DF <- hist(DF[[ult_names[4]]],breaks=breaksN,plot=F)
title <- sprintf('%s Ult Percent & Ult Per Minute',name)
plot(UltPercent_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,1),main=title,xlab='percent/ults per min',las=1)
plot(UltPM_DF, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[ult_names[3]]]),col='blue',lw=3)
abline(v=mean(DF[[ult_names[4]]]),col='red',lw=3)
legend("topleft",inset=.05,c('Ult Success Percent','Ults Per Minute'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
}
actives[1]
actives_indicator <- c(F,F,F)
actives <- c('a','a','a','a','a','a')
actives[1]
source('~/GitHub/SupportPie/support analysis lucio.R', echo=TRUE)
ult_names[1]
source('~/GitHub/SupportPie/support analysis lucio.R', echo=TRUE)
ult_names[3]
source('~/GitHub/SupportPie/support analysis lucio.R', echo=TRUE)
ult_names[1]
DF[[ult_names[1]]]
DF[[ult_names[2]]]
DF[[ult_names[3]]]
length(DF[[ult_names[1]]])
length(DF[[ult_names[1]]])*.4
c(0,max(DF[[ult_names[1]]]))
ylim=c(0,upperBoundY)
c(0,upperBoundY)
source('~/GitHub/SupportPie/support analysis lucio.R', echo=TRUE)
if(ult_names_indicator[1]){
#Ult 1
upperBoundY <- length(DF[[ult_names[1]]])*.4
Ult_DF_1 <- hist(DF[[ult_names[1]]],plot=F)
UltSuccess_DF_1 <- hist(DF[[ult_names[2]]],plot=F)
title <- sprintf('%s %s',name,ult_names[1])
plot(Ult_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,max(DF[[ult_names[1]]])),ylim=c(0,upperBoundY),main=title,xlab='ults',las=1) # #ults > #ult success
plot(UltSuccess_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[ult_names[1]]]),col='blue',lw=3)
abline(v=mean(DF[[ult_names[2]]]),col='red',lw=3)
legend("topright",inset=.05,c('Ults Casted','Ult Successful'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
UltPercent_DF_1 <- hist(DF[[ult_names[3]]],breaks=breaksN,plot=F)
UltPM_DF_1 <- hist(DF[[ult_names[4]]],breaks=breaksN,plot=F)
title <- sprintf('%s Ult Percent & Ult Per Minute',name)
plot(UltPercent_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,1),main=title,xlab='percent/ults per min',las=1)
plot(UltPM_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[ult_names[3]]]),col='blue',lw=3)
abline(v=mean(DF[[ult_names[4]]]),col='red',lw=3)
legend("topleft",inset=.05,c('Ult Success Percent','Ults Per Minute'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
}
if(ult_names_indicator[1]){
#Ult 1
upperBoundY <- length(DF[[ult_names[1]]])*.4
Ult_DF_1 <- hist(DF[[ult_names[1]]],plot=F)
UltSuccess_DF_1 <- hist(DF[[ult_names[2]]],plot=F)
title <- sprintf('%s %s',name,ult_names[1])
plot(Ult_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,max(DF[[ult_names[1]]])),ylim=c(0,upperBoundY),main=title,xlab='ults',las=1) # #ults > #ult success
plot(UltSuccess_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[ult_names[1]]]),col='blue',lw=3)
abline(v=mean(DF[[ult_names[2]]]),col='red',lw=3)
legend("topright",inset=.05,c('Ults Casted','Ult Successful'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
UltPercent_DF_1 <- hist(DF[[ult_names[3]]],breaks=breaksN,plot=F)
UltPM_DF_1 <- hist(DF[[ult_names[4]]],breaks=breaksN,plot=F)
title <- sprintf('%s Ult Percent & Ult Per Minute',name)
plot(UltPercent_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,1),main=title,xlab='percent/ults per min',las=1)
plot(UltPM_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[ult_names[3]]]),col='blue',lw=3)
abline(v=mean(DF[[ult_names[4]]]),col='red',lw=3)
legend("topleft",inset=.05,c('Ult Success Percent','Ults Per Minute'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
}else if(ult_names_indicator[2]){
#Ult 2
upperBoundY <- length(DF[[ult_names[5]]])*.4
Ult_DF_2 <- hist(DF[[ult_names[5]]],plot=F)
UltSuccess_DF_2 <- hist(DF[[ult_names[6]]],plot=F)
title <- sprintf('%s %s',name,ult_names[5])
plot(Ult_DF_2, col=rgb(0,0,1,1/4), xlim=c(0,max(DF[[ult_names[5]]])),ylim=c(0,upperBoundY),main=title,xlab='ults',las=1) # #ults > #ult success
plot(UltSuccess_DF_2, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[ult_names[5]]]),col='blue',lw=3)
abline(v=mean(DF[[ult_names[6]]]),col='red',lw=3)
legend("topright",inset=.05,c('Ults Casted','Ult Successful'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
UltPercent_DF_2 <- hist(DF[[ult_names[7]]],breaks=breaksN,plot=F)
UltPM_DF_2 <- hist(DF[[ult_names[8]]],breaks=breaksN,plot=F)
title <- sprintf('%s Ult Percent & Ult Per Minute',name)
plot(UltPercent_DF_2, col=rgb(0,0,1,1/4), xlim=c(0,1),main=title,xlab='percent/ults per min',las=1)
plot(UltPM_DF_2, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[ult_names[7]]]),col='blue',lw=3)
abline(v=mean(DF[[ult_names[8]]]),col='red',lw=3)
legend("topleft",inset=.05,c('Ult Success Percent','Ults Per Minute'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
}
if(actives_indicator[1]){
#Active 1
upperBoundY <- length(DF[[actives[1]]])*.4
Active_DF_1 <- hist(DF[[actives[1]]],plot=F)
ActiveSuccess_DF_1 <- hist(DF[[actives[2]]],plot=F)
title <- sprintf('%s %s',name,actives[1])
plot(Active_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,max(DF[[actives[1]]])),ylim=c(0,upperBoundY),main=title,xlab='ults',las=1)
plot(ActiveSuccess_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(DF[[actives[1]]]),col='blue',lw=3)
abline(v=mean(DF[[actives[2]]]),col='red',lw=3)
label1 <- sprintf('%s Casted',actives[1])
label2 <- sprintf('%s Successful',actives[1])
legend("topright",inset=.05,c(label1,label2), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
ActivePercent_DF_1 <- hist(DF[[actives[3]]],breaks=breaksN,plot=F)
title <- sprintf('%s Success Percent',actives[1])
plot(UltPercent_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,1),main=title,xlab='percent',las=1)
abline(v=mean(DF[[actives[3]]]),col='blue',lw=3)
label3 <- sprintf('%s Percent',actives[1])
legend("topleft",inset=.05,c(label3), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
}
actives[1]
DF[[actives[1]]]
actives_cleaned_1 <- DF[[actives[1]]]
actives_cleaned_1
actives_cleaned_1[!is.na(DF[[actives[1]]])]
source('~/GitHub/SupportPie/support analysis lucio.R', echo=TRUE)
actives_cleaned_1[!is.na(DF[[actives[1]]])]actives_cleaned
DF[[actives[1]]]
actives_cleaned_1[ !is.na( actives_cleaned_1 ) ]
actives_cleaned_1 <- DF[[actives[1]]]
actives_cleaned_1[ !is.na( actives_cleaned_1 ) ]
actives[2]
if(actives_indicator[1]){
#Active 1
Actives_Cleaned_1 <- DF[[actives[1]]]
Actives_Cleaned_1 <- Actives_Cleaned_1[ !is.na( Actives_Cleaned_1 ) ]
ActivesSuccess_Cleaned_1 <- DF[[actives[2]]]
ActivesSuccess_Cleaned_1 <- ActivesSuccess_Cleaned_1[ !is.na( ActivesSuccess_Cleaned_1 ) ]
upperBoundY <- length(Actives_Cleaned_1)*.4
Active_DF_1 <- hist(Actives_Cleaned_1,plot=F)
ActiveSuccess_DF_1 <- hist(ActivesSuccess_Cleaned_1,plot=F)
title <- sprintf('%s %s',name,actives[1])
plot(Active_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,max(Actives_Cleaned_1)),ylim=c(0,upperBoundY),main=title,xlab='counts',las=1)
plot(ActiveSuccess_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(Actives_Cleaned_1),col='blue',lw=3)
abline(v=mean(ActivesSuccess_Cleaned_1),col='red',lw=3)
label1 <- sprintf('%s Casted',actives[1])
label2 <- sprintf('%s Successful',actives[1])
legend("topright",inset=.05,c(label1,label2), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
ActivePercent_DF_1 <- hist(DF[[actives[3]]],breaks=breaksN,plot=F)
title <- sprintf('%s Success Percent',actives[1])
plot(UltPercent_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,1),main=title,xlab='percent',las=1)
abline(v=mean(DF[[actives[3]]]),col='blue',lw=3)
label3 <- sprintf('%s Percent',actives[1])
legend("topleft",inset=.05,c(label3), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
}
DF[[actives[3]]]
ActivesPercent_Cleaned_1 <- DF[[actives[3]]]
ActivesPercent_Cleaned_1 <- ActivesPercent_Cleaned_1[ !is.na( ActivesPercent_Cleaned_1 ) ]
ActivesPercent_Cleaned_1
source('~/GitHub/SupportPie/support analysis lucio.R', echo=TRUE)
ult_names[1]
source('~/GitHub/SupportPie/support analysis lucio.R', echo=TRUE)
ult[1]
ult_names[1]
ult_names
source('~/GitHub/SupportPie/support analysis lucio.R', echo=TRUE)
ult_names
DF[[ult[1]]]
DF[[ult_names[1]]]
Ult_Cleaned_1 <- DF[[ult_names[1]]]
Ult_Cleaned_1 <- Ult_Cleaned_1[ !is.na( Ult_Cleaned_1 ) ]
UltSuccess_Cleaned_1 <- DF[[ult_names[2]]]
UltSuccess_Cleaned_1 <- UltSuccess_Cleaned_1[ !is.na( UltSuccess_Cleaned_1 ) ]
Ult_Cleaned_1
ult_names[1]
ult_names[4]
if(ult_names_indicator[1]){
#Ult 1
Ult_Cleaned_1 <- DF[[ult_names[1]]]
Ult_Cleaned_1 <- Ult_Cleaned_1[ !is.na( Ult_Cleaned_1 ) ]
UltSuccess_Cleaned_1 <- DF[[ult_names[2]]]
UltSuccess_Cleaned_1 <- UltSuccess_Cleaned_1[ !is.na( UltSuccess_Cleaned_1 ) ]
upperBoundY <- length(Ult_Cleaned_1)*.4
Ult_DF_1 <- hist(Ult_Cleaned_1,plot=F)
UltSuccess_DF_1 <- hist(UltSuccess_Cleaned_1,plot=F)
title <- sprintf('%s %s n=%d',name,ult_names[1],length(Ult_Cleaned_1))
plot(Ult_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,max(Ult_Cleaned_1)),ylim=c(0,upperBoundY),main=title,xlab='ults',las=1) # #ults > #ult success
plot(UltSuccess_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(Ult_Cleaned_1),col='blue',lw=3)
abline(v=mean(UltSuccess_Cleaned_1),col='red',lw=3)
legend("topright",inset=.05,c('Ults Casted','Ult Successful'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
UltPercent_Cleaned_1 <- DF[[ult_names[3]]]
UltPercent_Cleaned_1 <- UltPercent_Cleaned_1[ !is.na( UltPercent_Cleaned_1 ) ]
UltPM_Cleaned_1 <- DF[[ult_names[4]]]
UltPM_Cleaned_1 <- UltPM_Cleaned_1[ !is.na( UltPM_Cleaned_1 ) ]
UltPercent_DF_1 <- hist(UltPercent_Cleaned_1,breaks=breaksN,plot=F)
UltPM_DF_1 <- hist(UltPM_Cleaned_1,breaks=breaksN,plot=F)
title <- sprintf('%s Ult Percent & Ult Per Minute n=%d',name,length(UltPercent_Cleaned_1))
plot(UltPercent_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,1),main=title,xlab='percent/ults per min',las=1)
plot(UltPM_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(UltPercent_Cleaned_1),col='blue',lw=3)
abline(v=mean(UltPM_Cleaned_1),col='red',lw=3)
legend("topleft",inset=.05,c('Ult Success Percent','Ults Per Minute'), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
}
if(ult_names_indicator[1]){
#Ult 1
Ult_Cleaned_1 <- DF[[ult_names[1]]]
Ult_Cleaned_1 <- Ult_Cleaned_1[ !is.na( Ult_Cleaned_1 ) ]
UltSuccess_Cleaned_1 <- DF[[ult_names[2]]]
UltSuccess_Cleaned_1 <- UltSuccess_Cleaned_1[ !is.na( UltSuccess_Cleaned_1 ) ]
upperBoundY <- length(Ult_Cleaned_1)*.6
Ult_DF_1 <- hist(Ult_Cleaned_1,plot=F)
UltSuccess_DF_1 <- hist(UltSuccess_Cleaned_1,plot=F)
title <- sprintf('%s %s n=%d',name,ult_names[1],length(Ult_Cleaned_1))
plot(Ult_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,max(Ult_Cleaned_1)),ylim=c(0,upperBoundY),main=title,xlab='ults',las=1) # #ults > #ult success
plot(UltSuccess_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(Ult_Cleaned_1),col='blue',lw=3)
abline(v=mean(UltSuccess_Cleaned_1),col='red',lw=3)
label1 <- sprintf('%s Casted',ult_names[1])
label2 <- sprintf('%s Successful',ult_names[1])
legend("topright",inset=.05,c(label1,label2), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
UltPercent_Cleaned_1 <- DF[[ult_names[3]]]
UltPercent_Cleaned_1 <- UltPercent_Cleaned_1[ !is.na( UltPercent_Cleaned_1 ) ]
UltPM_Cleaned_1 <- DF[[ult_names[4]]]
UltPM_Cleaned_1 <- UltPM_Cleaned_1[ !is.na( UltPM_Cleaned_1 ) ]
UltPercent_DF_1 <- hist(UltPercent_Cleaned_1,breaks=breaksN,plot=F)
UltPM_DF_1 <- hist(UltPM_Cleaned_1,breaks=breaksN,plot=F)
title <- sprintf('%s Ult Percent & Ult Per Minute n=%d',name,length(UltPercent_Cleaned_1))
plot(UltPercent_DF_1, col=rgb(0,0,1,1/4), xlim=c(0,1),main=title,xlab='percent/ults per min',las=1)
plot(UltPM_DF_1, col=rgb(1,0,0,1/4), add=T)
abline(v=mean(UltPercent_Cleaned_1),col='blue',lw=3)
abline(v=mean(UltPM_Cleaned_1),col='red',lw=3)
label3 <- sprintf('%s Percent',ult_names[1])
label4 <- sprintf('%s Per Minute',ult_names[1])
legend("topleft",inset=.05,c(label3,label4), fill=c(rgb(0,0,1,1/2),rgb(1,0,0,1/2)))
}
ult_names[5]
source('~/GitHub/SupportPie/support analysis lucio.R', echo=TRUE)
ult_names
source('~/GitHub/SupportPie/support analysis lucio.R', echo=TRUE)
Ult_Cleaned_2
source('~/GitHub/SupportPie/support analysis lucio.R', echo=TRUE)
